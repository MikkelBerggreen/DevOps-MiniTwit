# -*- mode: ruby -*-
# vi: set ft=ruby :

$ip_file = "db_ip.txt"

Vagrant.configure("2") do |config|
  config.vm.box = 'digital_ocean'
  config.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
  config.ssh.private_key_path = '~/.ssh/id_rsa'
  config.vm.synced_folder ".", "/vagrant", type: "rsync"

  config.vm.define "nginxtest", primary: true do |server|
    server.vm.provider :digital_ocean do |provider|
      provider.ssh_key_name = ENV["SSH_KEY_NAME"]
      provider.token = ENV["DIGITAL_OCEAN_TOKEN"]
      provider.image = 'ubuntu-22-04-x64'
      provider.region = 'fra1'
      provider.size = 's-1vcpu-1gb'
      provider.privatenetworking = true
    end

    server.vm.hostname = "nginxtest"

    server.trigger.after :up do |trigger|
      trigger.info =  "Writing cloudserver's IP to file..."
      trigger.ruby do |env,machine|
        remote_ip = machine.instance_variable_get(:@communicator).instance_variable_get(:@connection_ssh_info)[:host]
        File.write($ip_file, remote_ip)
      end
    end

    server.vm.provision "shell", inline: <<-SHELL
    echo "Update with sudo"
    sudo apt-get update

    echo "Install Nginx"
    apt-get -y install nginx
    echo "Cloning repo"
    git clone https://github.com/MinitwitGroupI/MiniTwit.git

    echo "Write to nginx config file"
    cat /Minitwit/VagrantMiniTwit/nginx_config.txt > /etc/nginx/sites-enabled/default

    echo "Reload nginx"
    service nginx reload
    echo "Install snap"
    sudo snap install core; sudo snap refresh core
    echo "Install certbot"
    sudo snap install --classic certbot
    echo "Ensure certbot command can be run"
    sudo ln -s /snap/bin/certbot /usr/bin/certbot
    
    echo "Run certbot"
    printf '%s\n' mirb@itu.dk Y N c | sudo certbot --nginx

    echo "Reload nginx"
    service nginx reload


      echo "================================================================="
      echo "=                            DONE                               ="
      echo "================================================================="
      echo "Navigate in your browser to:"
      THIS_IP=`hostname -I | cut -d" " -f1`
      echo "http://${THIS_IP}:8000"

    SHELL
  end
  
  # ideally 'sudo apt-get update' below, but doesn't work after 'rm -r .vagrant/' before calling 'vagrant up'
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    
  SHELL
end