# -*- mode: ruby -*-
# vi: set ft=ruby :

$ip_file = "db_ip.txt"

Vagrant.configure("2") do |config|
  config.vm.box = 'digital_ocean'
  config.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
  config.ssh.private_key_path = '~/.ssh/id_rsa'
  config.vm.synced_folder ".", "/vagrant", type: "rsync"

  

  config.vm.define "cloudserver", primary: true do |server|
    server.vm.provider :digital_ocean do |provider|
      provider.ssh_key_name = ENV["SSH_KEY_NAME"]
      # Should possibly be another SSH, but that would require many changes, seeing as much relies on the name "SSH_KEY_NAME"
      provider.token = ENV["DIGITAL_OCEAN_TOKEN"]
      provider.image = 'ubuntu-22-04-x64'
      provider.region = 'fra1'
      provider.size = 's-2vcpu-4gb'
      # Regular size as it's only used testing the staging environment
      provider.privatenetworking = true
    end

    server.vm.hostname = "cloudserver"

    server.trigger.after :up do |trigger|
      trigger.info =  "Writing cloudserver's IP to file..."
      trigger.ruby do |env,machine|
        remote_ip = machine.instance_variable_get(:@communicator).instance_variable_get(:@connection_ssh_info)[:host]
        File.write($ip_file, remote_ip)
      end
    end

    server.vm.provision "shell", inline: <<-SHELL
      echo "Setup droplet monitoring"
      curl -sSL https://repos.insights.digitalocean.com/install.sh | sudo bash

      git clone https://github.com/MinitwitGroupI/MiniTwit.git
      cd MiniTwit

      echo "Setup Heartbeat"
      sudo apt-get -y install heartbeat
      touch /etc/ha.d/ha.cf
      sudo bash -c "{
        echo node cloudserver
        echo ucast eth0 134.122.87.182
        echo node cloudserversecondary
        echo ucast eth0 178.128.196.241
      } > /etc/ha.d/ha.cf"

      touch /etc/ha.d/authkeys
      sudo bash -c "{
        echo auth1
        echo 1 sha1 #{ENV["AUTH_KEY_HEARTBEAT"]}
      } > /etc/ha.d/authkeys"
      sudo chmod 600 /etc/ha.d/authkeys

      echo "cloudserver floatip" > /etc/ha.d/haresources

      sudo curl -L -o /usr/local/bin/assign-ip http://do.co/assign-ip
      sudo chmod +x /usr/local/bin/assign-ip

      touch  /etc/init.d/floatip
      sudo bash -c "{
        echo #!/bin/bash
        echo param=$1
        echo export DO_TOKEN= '#{ENV["DIGITAL_OCEAN_TOKEN"]}'
      } > /etc/init.d/floatip"
      cat VagrantMiniTwit/floatipHeartbeat.txt >> /etc/init.d/floatip
      sudo chmod u+x /etc/init.d/floatip


      echo "Start Heartbeat"
      sudo systemctl start heartbeat

    SHELL
  end

  config.vm.define "cloudserversecondary", primary: true do |server|
    server.vm.provider :digital_ocean do |provider|
      provider.ssh_key_name = ENV["SSH_KEY_NAME"]
      # Should possibly be another SSH, but that would require many changes, seeing as much relies on the name "SSH_KEY_NAME"
      provider.token = ENV["DIGITAL_OCEAN_TOKEN"]
      provider.image = 'ubuntu-22-04-x64'
      provider.region = 'fra1'
      provider.size = 's-1vcpu-1gb'
      # Regular size as it's only used testing the staging environment
      provider.privatenetworking = true
    end

    server.vm.hostname = "cloudserversecondary"

    server.trigger.after :up do |trigger|
      trigger.info =  "Writing cloudserversecondary's IP to file..."
      trigger.ruby do |env,machine|
        remote_ip = machine.instance_variable_get(:@communicator).instance_variable_get(:@connection_ssh_info)[:host]
        File.write($ip_file, remote_ip)
      end
    end

    server.vm.provision "shell", inline: <<-SHELL
      echo "Setup droplet monitoring"
      curl -sSL https://repos.insights.digitalocean.com/install.sh | sudo bash

      git clone https://github.com/MinitwitGroupI/MiniTwit.git
      cd MiniTwit

      echo "Setup Heartbeat"
      sudo apt-get -y install heartbeat
      touch /etc/ha.d/ha.cf
      sudo bash -c "{
        echo node cloudserver
        echo ucast eth0 134.122.87.182
        echo node cloudserversecondary
        echo ucast eth0 178.128.196.241
      } > /etc/ha.d/ha.cf"

      touch /etc/ha.d/authkeys
      sudo bash -c "{
        echo auth1
        echo 1 sha1 #{ENV["AUTH_KEY_HEARTBEAT"]}
      } > /etc/ha.d/authkeys"
      sudo chmod 600 /etc/ha.d/authkeys

      echo "cloudserver floatip" > /etc/ha.d/haresources

      sudo curl -L -o /usr/local/bin/assign-ip http://do.co/assign-ip
      sudo chmod +x /usr/local/bin/assign-ip

      touch  /etc/init.d/floatip
      sudo bash -c "{
        echo #!/bin/bash
        echo param=$1
        echo export DO_TOKEN= '#{ENV["DIGITAL_OCEAN_TOKEN"]}'
      } > /etc/init.d/floatip"
      cat VagrantMiniTwit/floatipHeartbeat.txt >> /etc/init.d/floatip
      sudo chmod u+x /etc/init.d/floatip


      echo "Start Heartbeat"
      sudo systemctl start heartbeat

    SHELL
  end
  
  # ideally 'sudo apt-get update' below, but doesn't work after 'rm -r .vagrant/' before calling 'vagrant up'
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    
  SHELL
end