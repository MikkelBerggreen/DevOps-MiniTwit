version: '3.4'

services:

  db:
    image: mirbitu/dbimage:latest
    restart: always
    container_name: db-minitwit
    build:
      context: db
      dockerfile: ./Dockerfile
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=minitwit
    ports:
      - 5432:5432
    volumes: 
      - database:/var/lib/postgresql/data
    networks:
      - postgres
    extra_hosts:
      - "host.docker.internal:127.0.0.1"

  fastapi:
    image: mirbitu/minitwitimage:latest
    depends_on:
      - db
    networks:
      - postgres
    build:
      context: backend
      dockerfile: ./Dockerfile
    ports:
      - 8000:8000
    volumes: 
      - ./backend/.env:/app/.env
    expose:
      - 8000

  fastapi-tls:
    image: mirbitu/minitwitimage:latest
    depends_on:
      - db
    networks:
      - postgres
    build:
      context: backend
      dockerfile: ./DockerfileTLS
    ports:
      - 443:8000
    volumes: 
      - ./backend/.env:/app/.env
    expose:
      - 443

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - prometheus:/prometheus
      - ../.github/ansible/files/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    networks:
      - postgres

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ../.github/ansible/files/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
    ports:
      - 3000:3000
    networks:
      - postgres

  filebeat:
    image: "docker.elastic.co/beats/filebeat:7.17.1"
    user: root
    command: filebeat -e -strict.perms=false
    volumes:
        - ../.github/ansible/files/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
        - /var/lib/docker:/var/lib/docker:ro
        - /var/run/docker.sock:/var/run/docker.sock
    networks:
        - elk

  elasticsearch:
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.17.1"
    environment:
        - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
        - "discovery.type=single-node"
        - "xpack.security.enabled=true"
        - ELASTIC_PASSWORD=sesame0uvr3toi
    volumes:
        - elk_elasticsearch:/usr/share/elasticsearch/data
    networks:
        - elk
    ports:
      - 9200:9200

  kibana:
    image: "docker.elastic.co/kibana/kibana:7.17.1"
    environment:
      - "xpack.security.enabled=true"
      - ELASTICSEARCH_USERNAME=elastic
      - ELASTICSEARCH_PASSWORD=sesame0uvr3toi
      - ELASTICSEARCH_HOSTS:http://elasticsearch:9200
    networks:
        - elk
    ports:
      - 5601:5601 


networks:
  elk:
  postgres:

volumes:
  database:
  prometheus:
  grafana-data:
  elk_elasticsearch: